# Generated by swift-plugin-generator 0.1.0
name: Initial Setup (Consumer Mode)

on:
  push:
    branches: [main]

permissions:
  contents: write

jobs:
  initial-setup:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Check if initial setup already completed
        id: check-setup
        run: |
          # Check if any releases exist (0 releases = first run, has releases = migration scenario)
          RELEASE_COUNT=$(gh release list --limit 1 --json tagName --jq 'length')
          if [ "$RELEASE_COUNT" -gt 0 ]; then
            echo "completed=true" >> $GITHUB_OUTPUT
            echo "✓ Initial setup already completed (releases exist)"
          else
            echo "completed=false" >> $GITHUB_OUTPUT
            echo "→ First run detected (no releases exist)"
          fi
      
      - name: Extract version from upstream
        if: steps.check-setup.outputs.completed == 'false'
        id: version
        run: |
          # Extract version from artifact bundle URL: https://github.com/21-DOT-DEV/subtree/releases/download/0.0.2/subtree.artifactbundle.zip
          VERSION=$(echo "https://github.com/21-DOT-DEV/subtree/releases/download/0.0.2/subtree.artifactbundle.zip" | grep -oE '(v?[0-9]+\.[0-9]+\.[0-9]+(-[a-zA-Z0-9.]+)?(\+[a-zA-Z0-9.]+)?)' | head -1)
          if [ -z "$VERSION" ]; then
            echo "❌ Failed to extract version from URL"
            exit 1
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "→ Detected version: $VERSION"
      
      - name: Fetch release notes from upstream
        if: steps.check-setup.outputs.completed == 'false'
        id: release-notes
        run: |
          # Fetch release notes from upstream repository
          VERSION="${{ steps.version.outputs.version }}"
          NOTES=$(gh release view "$VERSION" \
            --repo "21-DOT-DEV/subtree" \
            --json body \
            --jq '.body' 2>/dev/null || echo "Release notes unavailable")
          
          # Save to file for later use
          echo "$NOTES" > release_notes.md
          echo "→ Fetched release notes from 21-DOT-DEV/subtree"
      
      - name: Delete this workflow file
        if: steps.check-setup.outputs.completed == 'false'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          
          # Remove this workflow file
          git rm .github/workflows/initial-setup-consumer.yml
          echo "→ Removed initial-setup-consumer.yml workflow"
      
      - name: Commit and push workflow deletion
        if: steps.check-setup.outputs.completed == 'false'
        run: |
          git commit -m "chore: remove initial setup workflow"
          git push
          echo "✓ Committed and pushed changes"
      
      - name: Create initial GitHub Release
        if: steps.check-setup.outputs.completed == 'false'
        run: |
          VERSION="${{ steps.version.outputs.version }}"
          
          # Get the current commit SHA (after our changes)
          COMMIT_SHA=$(git rev-parse HEAD)
          
          # Create release with upstream notes
          gh release create "$VERSION" \
            --repo "21-DOT-DEV/swift-plugin-subtree" \
            --target "$COMMIT_SHA" \
            --title "subtree $VERSION" \
            --notes-file release_notes.md
          
          echo "✓ Created initial release: $VERSION"
          echo "→ Plugin repository is now ready for use!"
      
      - name: Setup already completed
        if: steps.check-setup.outputs.completed == 'true'
        run: |
          echo "ℹ️  Initial setup was already completed previously"
          echo "→ This is a migration scenario (releases already exist)"
          echo "→ Skipping initial setup steps"
